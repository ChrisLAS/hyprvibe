# Do not modify this file!  It was generated by 'nixos-generate-config'
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ehci_pci" "nvme" "usbhid" "uas" "sd_mod" ];
  boot.initrd.kernelModules = [ "amdgpu" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];
  boot.kernelParams = [ 
    "elevator=none"
    # AMD GPU parameters for better HDMI DPMS support
    "amdgpu.dc=1"
    "amdgpu.dmcu=1"
    "amdgpu.ppfeaturemask=0xffffffff"
  ];

  boot.kernel.sysctl = {
    "vm.min_free_kbytes" = 65536;  # Ensure there's always some free memory
    "vm.swappiness" = 10;  # Reduce swapping aggressiveness
    "vm.vfs_cache_pressure" = 50;  # Balance between inode and dentry caches
    "vm.dirty_background_ratio" = 5;  # Flush dirty pages more aggressively
    "vm.dirty_ratio" = 10;  # Hard limit for dirty pages
  };

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/6cfe0859-9022-445b-8439-5a761d695e71";
      fsType = "ext4";
    };

  fileSystems."/nix" = {
    device = "/dev/disk/by-uuid/a10f0323-3b33-4dec-b460-606c8a8cd795";
    fsType = "btrfs";
    neededForBoot = true;
    options = [ "noatime" "compress=zstd" ];
  };

  fileSystems."/home" = {
    device = "/dev/disk/by-uuid/5de63f28-ca1a-4866-86e1-f592905c9ba3";
    fsType = "btrfs";
    neededForBoot = true;
    options = [ "noatime" "compress=zstd" ];
  };

  fileSystems."/scary" =
    { device = "/dev/disk/by-uuid/3808bc5f-0619-4920-8045-e36264f0cb2c";
      fsType = "xfs";
    };
  
  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
} 